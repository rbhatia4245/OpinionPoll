/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-09-02 14:04:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dao.QuestionDao;
import models.Question;
import java.util.ArrayList;
import dao.AnswerDao;

public final class results_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/results.css", Long.valueOf(1567423939115L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<style>");
      out.write("body{\r\n");
      out.write("    background-color:#222;\r\n");
      out.write("    color:#fff;\r\n");
      out.write("}\r\n");
      out.write(".question {\r\n");
      out.write("    display:flex;\r\n");
      out.write("    margin:0;\r\n");
      out.write("    background-color:#eee;\r\n");
      out.write("    justify-content:left;\r\n");
      out.write("    padding-top: 5px;\r\n");
      out.write("}\r\n");
      out.write(".chart {\r\n");
      out.write("    display:grid;\r\n");
      out.write("    grid-template-columns:repeat(4,1fr);\r\n");
      out.write("    grid-column-gap:5px;\r\n");
      out.write("    grid-template-rows:repeat(100,1fr);\r\n");
      out.write("    height:50vh;\r\n");
      out.write("    width:20vw;\r\n");
      out.write("}\r\n");
      out.write(".option{\r\n");
      out.write("    background-color:#ff4136;\r\n");
      out.write("    color:#eee;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Opinion Poll</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1>Current Opinion Poll Results</h1>\r\n");
      out.write("<ul>\r\n");
      out.write("    ");
 QuestionDao questionDao = new QuestionDao();
        ArrayList<Question> questionList = questionDao.getAll();
        AnswerDao answerDao = new AnswerDao();
        for(Question question:questionList) {
            int id=question.getId();
            int numberOfAnswers=answerDao.getAnswerCount(id);
            int[] optionCount = new int[4];
            int max=Integer.MIN_VALUE;
            optionCount[0]=answerDao.getAnswerCount(id,question.getOptionOne());
            if(optionCount[0]>max)
                max=optionCount[0];
            optionCount[1]=answerDao.getAnswerCount(id,question.getOptionTwo());
            if(optionCount[1]>max)
                max=optionCount[1];
            optionCount[2]=answerDao.getAnswerCount(id,question.getOptionThree());
            if(optionCount[2]>max)
                max=optionCount[2];
            optionCount[3]=answerDao.getAnswerCount(id,question.getOptionFour());
            if(optionCount[3]>max)
                max=optionCount[3];
            int[] optionPercent= new int[4];
            optionPercent[0] = (optionCount[0]*100/numberOfAnswers);
            optionPercent[1] = (optionCount[1]*100/numberOfAnswers);
            optionPercent[2] = (optionCount[2]*100/numberOfAnswers);
            optionPercent[3] = (optionCount[3]*100/numberOfAnswers);
    
      out.write("\r\n");
      out.write("    <label><b>Q.");
      out.print(question.getFullQuestion());
      out.write("</b></label>\r\n");
      out.write("    <div>\r\n");
      out.write("        <label>Total answers:");
      out.print(answerDao.getAnswerCount(id));
      out.write("</label>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div>\r\n");
      out.write("        <label ");
if(optionCount[0]==max){
      out.write(" style=\"color:#19aea5\"");
}
      out.write("><b><i>A.</i></b>");
      out.print(question.getOptionOne());
      out.write(':');
      out.print(optionCount[0]);
      out.write("</label>\r\n");
      out.write("        <label ");
if(optionCount[1]==max){
      out.write(" style=\"color:#19aea5\" ");
}
      out.write("><b><i>B.</i></b>");
      out.print(question.getOptionTwo());
      out.write(':');
      out.print(optionCount[1]);
      out.write("</label>\r\n");
      out.write("        <label ");
if(optionCount[2]==max){
      out.write(" style=\"color:#19aea5\" ");
}
      out.write("><b><i>C.</i></b>");
      out.print(question.getOptionThree());
      out.write(':');
      out.print(optionCount[2]);
      out.write("</label>\r\n");
      out.write("        <label ");
if(optionCount[3]==max){
      out.write(" style=\"color:#19aea5\" ");
}
      out.write("><b><i>D.</i></b>");
      out.print(question.getOptionFour());
      out.write(':');
      out.print(optionCount[3]);
      out.write("</label>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"question\">\r\n");
      out.write("        <div class=\"chart\">\r\n");
      out.write("            ");
if(optionPercent[0]!=0){
      out.write("\r\n");
      out.write("            <div class=\"option\" style=\"grid-row-start:");
      out.print(100-optionPercent[0]+1);
      out.write(";grid-row-end:101;grid-column: 1\"><label>A&#x0028;");
      out.print(optionPercent[0]);
      out.write("&#x0025;&#x0029;</label></div>\r\n");
      out.write("            ");
}
      out.write("\r\n");
      out.write("            ");
if(optionPercent[1]!=0){
      out.write("\r\n");
      out.write("            <div class=\"option\" style=\"grid-row-start:");
      out.print(100-optionPercent[1]+1);
      out.write(";grid-row-end:101;grid-column: 2\"><label>B&#x0028;");
      out.print(optionPercent[1]);
      out.write("&#x0025;&#x0029;</label></div>\r\n");
      out.write("            ");
}
      out.write("\r\n");
      out.write("            ");
if(optionPercent[2]!=0){
      out.write("\r\n");
      out.write("            <div class=\"option\" style=\"grid-row-start:");
      out.print(100-optionPercent[2]+1);
      out.write(";grid-row-end:101;grid-column: 3\"><label>C&#x0028;");
      out.print(optionPercent[2]);
      out.write("&#x0025;&#x0029;</label></div>\r\n");
      out.write("            ");
}
      out.write("\r\n");
      out.write("            ");
if(optionPercent[3]!=0){
      out.write("\r\n");
      out.write("            <div class=\"option\" style=\"grid-row-start:");
      out.print(100-optionPercent[3]+1);
      out.write(";grid-row-end:101;grid-column: 4\"><label>D&#x0028;");
      out.print(optionPercent[3]);
      out.write("&#x0025;&#x0029;</label></div>\r\n");
      out.write("            ");
}
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
}
      out.write("\r\n");
      out.write("</ul>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
